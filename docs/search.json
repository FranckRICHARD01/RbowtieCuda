[{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An Introduction to RbowtieCuda","text":"NVBIO library reusable components developed NVIDIA Corporation accelerate bioinformatics applications using CUDA technology. Although specifically designed harness computational power NVIDIA GPUs, many components fully cross-platform can used host C++ device CUDA code. purpose NVBIO twofold. serves robust foundation developing modern GPU-focused applications, ensuring core computations delegated library automatically benefit advances GPU technology. time, provides valuable resources designing novel bioinformatics algorithms tailored massively parallel architectures. addition core components, NVBIO includes suite applications built top library. Among nvBowtie, re-engineered implementation widely recognized Bowtie2 short-read aligner 1. Unlike many prototypes, nvBowtie built industrial-grade aligner, replicating Bowtie2’s original features adding enhancements efficient support direct BAM output, future plans CRAM support.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"performances","dir":"Articles","previous_headings":"","what":"Performances","title":"An Introduction to RbowtieCuda","text":"nvBowtie designed fully exploit massive parallelism modern GPUs, delivering significantly higher alignment throughput without compromising accuracy, achieving even greater accuracy amount time. example, performance compared Bowtie2 using Illumina HiSeq 2000 dataset (first 10 million reads ERR161544) IonProton dataset, applying end--end local alignment methods. results demonstrate impressive 99.98% agreement high MAPQ scores. comparison, Bowtie2 tests performed using 20 CPU threads default alignment settings. benchmark","code":"knitr::include_graphics(\"benchmark-nvbowtie-speedup.png\")"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"rbowtiecuda","dir":"Articles","previous_headings":"Performances","what":"RBowtieCuda","title":"An Introduction to RbowtieCuda","text":"package provides R wrapper nvBio/nvBowtie, offering user-friendly interfaces specifically designed R users. maximize efficiency, indexing alignment functions (nvBWT nvBowtie) implemented C++ seamlessly integrated R using system2 function. integration fully transparent user, ensuring package easy use providing high-performance features optimized take full advantage machine’s capabilities. Additionally, experimental implementation Wavefront Alignment (WFA) method 2 included can accessed using --wfa parameter execution. Please note package requires NVIDIA graphics card proper functionality.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"additional-installation-instructions","dir":"Articles","previous_headings":"","what":"Additional Installation Instructions","title":"An Introduction to RbowtieCuda","text":"detailed installation steps, please refer INSTALL file included package. RbowtieCuda compatible Cuda versions greater equal 10. However, compiling nvBWT indexing tool results error using CUDA versions 12.5 later. actively working solution.","code":""},{"path":[]},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"installation","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda","what":"Installation","title":"An Introduction to RbowtieCuda","text":"install latest version RbowtieCuda, ensure running --date version R. RbowtieCuda part Bioconductor project, can easily install along dependencies following steps: R package, need load RbowtieCuda time using , like :","code":"library(BiocManager) BiocManager::install(\"RbowtieCuda\") library(RbowtieCuda) ## Loading required package: SummarizedExperiment ## Loading required package: MatrixGenerics ## Loading required package: matrixStats ##  ## Attaching package: 'MatrixGenerics' ## The following objects are masked from 'package:matrixStats': ##  ##     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, ##     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, ##     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, ##     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, ##     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, ##     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, ##     colWeightedMeans, colWeightedMedians, colWeightedSds, ##     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, ##     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, ##     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, ##     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, ##     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, ##     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, ##     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, ##     rowWeightedSds, rowWeightedVars ## Loading required package: GenomicRanges ## Loading required package: stats4 ## Loading required package: BiocGenerics ##  ## Attaching package: 'BiocGenerics' ## The following objects are masked from 'package:stats': ##  ##     IQR, mad, sd, var, xtabs ## The following objects are masked from 'package:base': ##  ##     anyDuplicated, aperm, append, as.data.frame, basename, cbind, ##     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, ##     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, ##     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, ##     Position, rank, rbind, Reduce, rownames, sapply, saveRDS, setdiff, ##     table, tapply, union, unique, unsplit, which.max, which.min ## Loading required package: S4Vectors ##  ## Attaching package: 'S4Vectors' ## The following object is masked from 'package:utils': ##  ##     findMatches ## The following objects are masked from 'package:base': ##  ##     expand.grid, I, unname ## Loading required package: IRanges ## Loading required package: GenomeInfoDb ## Loading required package: Biobase ## Welcome to Bioconductor ##  ##     Vignettes contain introductory material; view with ##     'browseVignettes()'. To cite Bioconductor, see ##     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. ##  ## Attaching package: 'Biobase' ## The following object is masked from 'package:MatrixGenerics': ##  ##     rowMedians ## The following objects are masked from 'package:matrixStats': ##  ##     anyMissing, rowMedians"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"nvbwt-building-bwt-indices-for-reference-fasta-files","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda","what":"nvBWT : Building BWT Indices for Reference FASTA Files","title":"An Introduction to RbowtieCuda","text":"nvBWT application developed part NVBIO library, designed perform BWT-based reference indexing nvBowtie potentially FM-index-based applications. provided one FASTA files, nvBWT generates forward reverse Burrows-Wheeler Transform (BWT), along 2-bit packed representation sequences. addition, produces several auxiliary indices support efficient alignment querying.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"example","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda > nvBWT : Building BWT Indices for Reference FASTA Files","what":"Example:","title":"An Introduction to RbowtieCuda","text":"generate following files: nvBWT supports following command options:","code":"td <- tempdir() fa_file <- system.file(package=\"RbowtieCuda\", \"extdata\", \"bt2\", \"refs\", \"lambda_virus.fa\") nvBWT(myinput=fa_file, output=file.path(td, \"index\"), options=\"\") ## [1] 0 index.pac index.rpac index.bwt index.rbwt index.sa index.rsa index.ann index.amb -v       | --verbosity     int (0-6) [5]     // select the verbosity level -m       | --max-length    int       [inf]   // clamp input length -b       | --byte-packing                    // output a byte-encoded .pac file -w       | --word-packing                    // output a word-encoded .wpac file (more efficient) -c       | --crc                             // compute CRCs -d       | --device                          // select a cuda device"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"nvbowtie-alignments","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda","what":"nvBowtie Alignments:","title":"An Introduction to RbowtieCuda","text":"nvBowtie GPU-accelerated re-engineering Bowtie2, one widely used short-read aligners. Completely rewritten scratch, nvBowtie retains many key features Bowtie2, though functionalities replicated. Designed fully exploit massive parallelism modern GPUs, nvBowtie achieves significantly higher alignment throughput without sacrificing accuracy—offers even greater accuracy within time frame. Despite focus performance, nvBowtie carefully designed align closely Bowtie2 terms specificity sensitivity, maintaining level reliability users. harness computational power modern processor architectures, nvBowtie re-implements algorithms underlying Bowtie2 adopts fundamentally different approach. Bowtie2 optimized process one read time—using multiple CPU threads handle different reads simultaneously—nvBowtie operates large batches reads, treating alignment pipeline. pipeline consists many relatively simple highly parallel stages, optimized execution GPUs. several stages, parallelism extends far beyond read level, processing multiple candidate hits read simultaneously, enabling much finer granularity parallel computation.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"new-features","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda > nvBowtie Alignments:","what":"New features :","title":"An Introduction to RbowtieCuda","text":"’ve introduced several new functions nvBowtie. can now perform alignments using WFA method including --wfa  (--scoring wfa) parameter. WFA method requires large amount RAM graphics card. therefore recommend using Nvidia card 8GB . Please note feature still experimental; currently supports end--end alignments yet allow customization scoring parameters. default, uses following scoring: match:0, mismatch:1, gap_open:1 gap_ext:1. Additionally, --cache-writes parameter optimizes disk write operations, resulting faster alignments. functionality requires 4GB RAM limited paired-end alignments.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"example-1","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda > nvBowtie Alignments:","what":"Example :","title":"An Introduction to RbowtieCuda","text":"Reads_1 Reads_2 represent raw paired-end read files FASTQ format. Using nvBWT index, reads mapped reference genome invoking nvBowtie. resulting alignments stored BAM file, file path specified output parameter.","code":"read_1 <- system.file(package=\"RbowtieCuda\", \"extdata\", \"bt2\", \"reads\", \"reads_1.fastq\") read_2 <- system.file(package=\"RbowtieCuda\", \"extdata\", \"bt2\", \"reads\", \"reads_2.fastq\") nvBowtie(file.path(td, \"index\"), file.path(td, \"my_result.bam\"), options=\"\", seq1=read_1, seq2=read_2) ## [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"indexing-of-bam-files-produced-by-nvbowtie","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda > nvBowtie Alignments:","what":"Indexing of bam files produced by nvBowtie","title":"An Introduction to RbowtieCuda","text":"nvBowtie automatically generate .bai index files typically associated .bam files. index files essential visualizing .bam files tools Integrative Genomics Viewer (IGV). Fortunately, issue can easily resolved using Rsamtools package, includes required functionality. example, generated file named results.bam, can create corresponding index file simple command. need run following R:","code":"library(Rsamtools)  sortBam(\"results.bam\", \"results\") indexBam(\"results.bam\")"},{"path":[]},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"options-and-version-of-the-nvbowtie-aligner","dir":"Articles","previous_headings":"An Example Workflow Using RbowtieCuda > nvBowtie Alignments:","what":"Options and Version of the nvBowtie Aligner","title":"An Introduction to RbowtieCuda","text":"can customize alignment process adjusting available options, enabling optimize performance accuracy according specific needs: can execute unit tests program using following commands tools, ensuring functionality correctness: can obtain version information executing following command:","code":"nvBowtie_usage() ## [1] \"options:\" ## [1] \"General:\" ## [1] \"  --verbosity         int                    [5]        verbosity level\" ## [1] \"  --upto       | -u   int                    [-1]       maximum number of reads to process\" ## [1] \"  --trim3      | -3   int                    [0]        trim the first N bases of 3'\" ## [1] \"  --trim5      | -5   int                    [0]        trim the first N bases of 5'\" ## [1] \"  --nofw                                     [false]    do not align the forward strand\" ## [1] \"  --norc                                     [false]    do not align the reverse-complemented strand\" ## [1] \"  --device            int                    [0]        select the given cuda device(s) (e.g. --device 0 --device 1 ...)\" ## [1] \"  --file-ref                                 [false]    load reference from file\" ## [1] \"  --server-ref                               [false]    load reference from server\" ## [1] \"  --phred33                                  [true]     qualities are ASCII characters equal to Phred quality + 33\" ## [1] \"  --phred64                                  [false]    qualities are ASCII characters equal to Phred quality + 64\" ## [1] \"  --solexa-quals                             [false]    qualities are in the Solexa format\" ## [1] \"  --rg-id             string                            add the RG-ID field of the SAM output header\" ## [1] \"  --rg                string,val                        add an RG-TAG field of the SAM output header\" ## [1] \"  --cache-writes      bool                   [false]    speed up writes on disk\" ## [1] \"Paired-End:\" ## [1] \"  --ff                                       [false]    paired mates are forward-forward\" ## [1] \"  --fr                                       [true]     paired mates are forward-reverse\" ## [1] \"  --rf                                       [false]    paired mates are reverse-forwardd\" ## [1] \"  --rr                                       [false]    paired mates are reverse-reverse\" ## [1] \"  --minins     |  -I  int                    [0]        minimum insert length\" ## [1] \"  --maxins     |  -X  int                    [500]      maximum insert length\" ## [1] \"  --overlap                                  [true]     allow overlapping mates\" ## [1] \"  --no-mixed                                 [false]    only report paired alignments\" ## [1] \"  --ungapped-mates | -ug                                perform ungapped mate alignment\" ## [1] \"Seeding:\" ## [1] \"  --seed-len   | -L   int                    [22]       seed lengths\" ## [1] \"  --seed-freq  | -i   {G|L|S},x,y                       seed interval, as x + y*func(read-len) (G=log,L=linear,S=sqrt)\" ## [1] \"  --max-hits          int                    [100]      maximum amount of seed hits\" ## [1] \"  --max-reseed | -R   int                    [2]        number of reseeding rounds\" ## [1] \"  --top               bool                   [false]    explore top seed entirely\" ## [1] \"  --N                 bool                   [false]    allow substitution in seed\" ## [1] \"Extension:\" ## [1] \"  --mode              {best,best-exact,all}  [best]     alignment mode\\n\" ## [1] \"  --all        | -a                          [false]    perform all-mapping (i.e. find and report all alignments)\" ## [1] \"  --local                                    [false]    perform local alignment\" ## [1] \"  --rand                                     [true]     randomized seed hit selection\" ## [1] \"  --no-rand                                  [false]    do not randomize seed hit selection\" ## [1] \"  --max-dist          int                    [15]       maximum edit distance\" ## [1] \"  --max-effort-init   int                    [15]       initial maximum number of consecutive extension failures\" ## [1] \"  --max-effort | -D   int                    [15]       maximum number of consecutive extension failures\" ## [1] \"  --min-ext           int                    [30]       minimum number of extensions per read\" ## [1] \"  --max-ext           int                    [400]      maximum number of extensions per read\" ## [1] \"  --very-fast                                           apply the very-fast presets\" ## [1] \"  --fast                                                apply the fast presets\" ## [1] \"  --sensitive                                           apply the sensitive presets\" ## [1] \"  --very-sensitive                                      apply the very-sensitive presets\" ## [1] \"  --very-fast-local                                     apply the very-fast presets\" ## [1] \"  --fast-local                                          apply the fast presets\" ## [1] \"  --sensitive-local                                     apply the sensitive presets\" ## [1] \"  --very-sensitive-local                                apply the very-sensitive presets\" ## [1] \"Scoring:\" ## [1] \"  --scoring           {sw|ed|wfa}            [ed]       Smith-Waterman / Edit-Distance / Wfa scoring\" ## [1] \"  --score-min         {G|L|S},x,y                       minimum score function, as x + y*func(read-len)\" ## [1] \"  --ma                int                               match bonus\" ## [1] \"  --mp                int,int                           mismatch min/max penalties\" ## [1] \"  --np                int                               N penalty\" ## [1] \"  --rdg               int,int                           read open/extension gap penalties\" ## [1] \"  --rfg               int,int                           reference open/extension gap penalties\" ## [1] \"Alternative:\" ## [1] \"  --wfa                                                 Activate wavefront algorithm\" ## [1] \"Reporting:\" ## [1] \"  --mapQ-filter | -Q  int                    [0]        minimum mapQ threshold\" ## [1] \"\" ## [1] \"\" ## [1] \"Default values are indicated in brackets [].\" ## [1] \"\" ## [1] \"The '--scoring-scheme filename' option allows to provide a custom Smith-Waterman scoring\" ## [1] \"scheme through a text file, where each line must contain a token value pair.\" ## [1] \" The tokens and default values are reported below:\" ## [1] \"*  match               0        // local alignment: 2\" ## [1] \"*  mm-penalty-min      2\" ## [1] \"*  mm-penalty-max      6\" ## [1] \"*  N-penalty-min       1\" ## [1] \"*  N-penalty-max       1\" ## [1] \"*  score-min-const     -0.6     // local alignment: 0\" ## [1] \"*  score-min-coeff     -0.6     // local alignment: 10\" ## [1] \"*  score-min-type      linear   // local alignment: log\" ## [1] \"*  N-ceil-const        0\" ## [1] \"*  N-ceil-coeff        0.15\" ## [1] \"*  read-gap-const      5\" ## [1] \"*  read-gap-coeff      3\" ## [1] \"*  ref-gap-const       5\" ## [1] \"*  ref-gap-coeff       3\" ## [1] \"*  gap-free            5\" nvbio_tests() ## [1] 0 nvBowtie_version() ## [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"An Introduction to RbowtieCuda","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.10 ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.12.0  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.12.0 ##  ## locale: ##  [1] LC_CTYPE=fr_FR.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=es_ES.UTF-8        LC_COLLATE=fr_FR.UTF-8     ##  [5] LC_MONETARY=es_ES.UTF-8    LC_MESSAGES=fr_FR.UTF-8    ##  [7] LC_PAPER=es_ES.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=es_ES.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Madrid ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] RbowtieCuda_0.1.2           SummarizedExperiment_1.36.0 ##  [3] Biobase_2.66.0              GenomicRanges_1.58.0        ##  [5] GenomeInfoDb_1.42.0         IRanges_2.40.0              ##  [7] S4Vectors_0.44.0            BiocGenerics_0.52.0         ##  [9] MatrixGenerics_1.18.0       matrixStats_1.4.1           ##  ## loaded via a namespace (and not attached): ##  [1] Matrix_1.7-0            jsonlite_1.8.9          compiler_4.4.1          ##  [4] crayon_1.5.3            jquerylib_0.1.4         systemfonts_1.1.0       ##  [7] textshaping_0.4.0       png_0.1-8               yaml_2.3.10             ## [10] fastmap_1.2.0           lattice_0.22-6          R6_2.5.1                ## [13] XVector_0.46.0          S4Arrays_1.6.0          knitr_1.49              ## [16] htmlwidgets_1.6.4       DelayedArray_0.32.0     desc_1.4.3              ## [19] GenomeInfoDbData_1.2.13 bslib_0.8.0             rlang_1.1.4             ## [22] cachem_1.1.0            xfun_0.49               fs_1.6.5                ## [25] sass_0.4.9              SparseArray_1.6.0       cli_3.6.3               ## [28] pkgdown_2.1.1           zlibbioc_1.52.0         grid_4.4.1              ## [31] digest_0.6.37           rstudioapi_0.17.1       lifecycle_1.0.4         ## [34] evaluate_1.0.1          ragg_1.3.3              abind_1.4-8             ## [37] rmarkdown_2.29          httr_1.4.7              tools_4.4.1             ## [40] htmltools_0.5.8.1       UCSC.utils_1.2.0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"acknowledgement","dir":"Articles","previous_headings":"","what":"Acknowledgement","title":"An Introduction to RbowtieCuda","text":"like thank Ismael Galve Roperh assistance.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"credits","dir":"Articles","previous_headings":"","what":"Credits","title":"An Introduction to RbowtieCuda","text":"main contributors original NVBIO : RbowtieCuda developers: maintainer RbowtieCuda package Franck RICHARD","code":"Jacopo Pantaleoni - jpantaleoni@nvidia.com Nuno Subtil - nsubtil@nvidia.com Samuel Simon Sanchez - samsimon@ucm.es Franck RICHARD - franck.richard@winstars.net"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"website","dir":"Articles","previous_headings":"","what":"Website","title":"An Introduction to RbowtieCuda","text":"dedicated website helpful resources RbowtieCuda package available , github copy ","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/articles/RbowtieCuda-Introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"An Introduction to RbowtieCuda","text":"[1] Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment Bowtie 2. Nature methods, 9(4), 357-359. [2] Marco-Sola S, Moure JC, Moreto M et al. Fast gap-affine pairwise alignment using wavefront algorithm. Bioinformatics 2021;37: 456–63.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacopo Pantaleoni. Author. Nuno Subtil. Author. Samuel Simon-Sanchez. Author. Franck RICHARD. Author, maintainer.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pantaleoni J, Subtil N, Simon-Sanchez S, RICHARD F (2024). RbowtieCuda: R Wrapper nvBowtie nvBWT, rewritten version Bowtie2 cuda. R package version 0.1.2, https://belacqua-labo.ovh/bioinformatic/RbowtieCuda, https://github.com/FranckRICHARD01/RbowtieCuda.","code":"@Manual{,   title = {RbowtieCuda: An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda},   author = {Jacopo Pantaleoni and Nuno Subtil and Samuel Simon-Sanchez and Franck RICHARD},   year = {2024},   note = {R package version 0.1.2, https://belacqua-labo.ovh/bioinformatic/RbowtieCuda},   url = {https://github.com/FranckRICHARD01/RbowtieCuda}, }"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/index.html","id":"rbowtiecuda-package-an-r-wrapper-for-nvbowtie-a-fork-version-of-the-nvbio-library","dir":"","previous_headings":"","what":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","title":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","text":"RbowtieCuda package provides R interface nvBowtie1, CUDA-based adaptation popular Bowtie2 short-read aligner, originally developed Jacopo Pantaleoni collaborators. package allows users build genome indexes create alignment files .sam .bam formats, leveraging computational power modern NVIDIA GPUs significantly faster processing speeds. nvBowtie part NVBIO library, package also includes experimental implementation Wavefront Alignment (WFA) method 2.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/index.html","id":"source-package-information","dir":"","previous_headings":"","what":"Source Package Information","title":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","text":"RbowtieCuda built modified version nvBIO v1.1.50 source code, can accessed https://github.com/NVlabs/nvbio.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","text":"like thank Ismael Galve Roperh assistance.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","text":"Original NVBIO developers: RbowtieCuda developers: Maintainer: Franck RICHARD","code":"Jacopo Pantaleoni - jpantaleoni@nvidia.com Nuno Subtil - nsubtil@nvidia.com Samuel Simon Sanchez - samsimon@ucm.es Franck RICHARD - franck.richard@winstars.net"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"An R Wrapper for nvBowtie and nvBWT, a rewritten version of Bowtie2 for cuda","text":"[1] Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment Bowtie 2. Nature methods, 9(4), 357-359. [2] Marco-Sola S, Moure JC, Moreto M et al. Fast gap-affine pairwise alignment using wavefront algorithm. Bioinformatics 2021;37: 456–63.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":null,"dir":"Reference","previous_headings":"","what":"Make system call for binaries — .callbinary2","title":"Make system call for binaries — .callbinary2","text":"Function makes system call RbowtieCuda binaries.  Note designed used outside package.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make system call for binaries — .callbinary2","text":"","code":".callbinary2(bin1, args1, path = NULL)"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make system call for binaries — .callbinary2","text":"bin1 Character. binary used system call. args1 Character. arguments pass binary. path Character Optional: passed function, returns path.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make system call for binaries — .callbinary2","text":"invisible Integer call status. value 0 mistakes.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make system call for binaries — .callbinary2","text":"Franck RICHARD","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/dot-callbinary2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make system call for binaries — .callbinary2","text":"","code":".callbinary2(bin1 = \"nvBowtie\", args1 = \"--version\") #> [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":null,"dir":"Reference","previous_headings":"","what":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"function can use call wrapped nvBWT binary.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"","code":"nvBWT(myinput, output, options = NULL)"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"myinput Character vector. path .fa file output Character vector. path index file used alignment output. options Character vector. Options Example: --verbosity","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"invisible Integer call status. value 0 mistakes Otherwise value non-zero.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"Available options:","code":"-v       | --verbosity     int (0-6) [5]     // select the verbosity level -m       | --max-length    int       [inf]   // clamp input length -b       | --byte-packing  [default]         // output a byte-encoded .pac file -w       | --word-packing                    // output a word-encoded .wpac file                                              // (more efficient) -c       | --crc                             // compute CRCs -d       | --device                          // select a cuda device"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment Bowtie 2. Nature methods, 9(4), 357-359.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"Franck RICHARD","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBWT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nvBWT : builds the BWT indices of the reference FASTA files — nvBWT","text":"","code":"td <- tempdir() fa_file <- system.file(package='RbowtieCuda', 'extdata', 'bt2', 'refs', 'lambda_virus.fa') nvBWT(myinput=fa_file, output=file.path(td, 'index'), options='') #> [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":null,"dir":"Reference","previous_headings":"","what":"nvBowtie align function — nvBowtie","title":"nvBowtie align function — nvBowtie","text":"nvBowtie GPU-accelerated re-engineering Bowtie2, widely used short-read aligner.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nvBowtie align function — nvBowtie","text":"","code":"nvBowtie(index, output_file, options, seq1, seq2 = NULL)"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nvBowtie align function — nvBowtie","text":"index Character vector. Index file created nvBWT. output_file Character vector. alignment output file (.sam o .bam) options Character vector. Specify additional options customize processing. complete list available options, type  nvBowtie_usage(). seq1 Character vector. single-end sequencing, contains sequence file paths. paired-end sequencing, can file path #1 mates paired file paths seq2. seq2 Character vector. contains file paths #2 mates paired file path seq1. single-end sequencoing files, must NULL.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nvBowtie align function — nvBowtie","text":"invisible Integer call status. value 0 mistakes Otherwise value non-zero.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nvBowtie align function — nvBowtie","text":"’ve introduced several new features nvBowtie. can now perform alignments using WFA method including --wfa (--scoring wfa) parameter. WFA method requires large amount RAM graphics card. therefore recommend using Nvidia card 8GB . Please note feature still experimental; currently supports end--end alignments yet allow customization scoring parameters. default, uses following scoring: match:0, mismatch:1, gap_open:1 gap_ext:1. Additionally, --cache-writes parameter optimizes disk write operations, resulting faster alignments. functionality requires 4GB RAM limited paired-end alignments.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nvBowtie align function — nvBowtie","text":"Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment Bowtie 2. Nature methods, 9(4), 357-359.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nvBowtie align function — nvBowtie","text":"","code":"td <- tempdir()  ## Building index fa_file <- system.file(package='RbowtieCuda', 'extdata', 'bt2', 'refs', 'lambda_virus.fa') nvBWT(myinput=fa_file, output=file.path(td, 'index'), options='') #> [1] 0  ## Alignments read_1 <- system.file(package='RbowtieCuda', 'extdata', 'bt2', 'reads', 'reads_1.fastq') read_2 <- system.file(package='RbowtieCuda', 'extdata', 'bt2', 'reads', 'reads_2.fastq')  ## Sam file created with paired-end files (paired mates are here reverse-forward) nvBowtie(file.path(td, 'index'), file.path(td, 'my_result.sam'), options='--rf', seq1=read_1, seq2=read_2) #> [1] 0  ## Bam file created with single-end file nvBowtie(file.path(td, 'index'), file.path(td, 'my_result.bam'), options='', seq1=read_1) #> [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"Calling nvBowtie_usage() prints available arguments can passed nvBowtie() function.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"","code":"nvBowtie_usage()"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"invisible Integer call status. value 0 mistakes Otherwise value non-zero.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment Bowtie 2. Nature methods, 9(4), 357-359.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"Franck RICHARD","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_usage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print available arguments that can be passed to nvBowtie() — nvBowtie_usage","text":"","code":"nvBowtie_usage() #> [1] \"options:\" #> [1] \"General:\" #> [1] \"  --verbosity         int                    [5]        verbosity level\" #> [1] \"  --upto       | -u   int                    [-1]       maximum number of reads to process\" #> [1] \"  --trim3      | -3   int                    [0]        trim the first N bases of 3'\" #> [1] \"  --trim5      | -5   int                    [0]        trim the first N bases of 5'\" #> [1] \"  --nofw                                     [false]    do not align the forward strand\" #> [1] \"  --norc                                     [false]    do not align the reverse-complemented strand\" #> [1] \"  --device            int                    [0]        select the given cuda device(s) (e.g. --device 0 --device 1 ...)\" #> [1] \"  --file-ref                                 [false]    load reference from file\" #> [1] \"  --server-ref                               [false]    load reference from server\" #> [1] \"  --phred33                                  [true]     qualities are ASCII characters equal to Phred quality + 33\" #> [1] \"  --phred64                                  [false]    qualities are ASCII characters equal to Phred quality + 64\" #> [1] \"  --solexa-quals                             [false]    qualities are in the Solexa format\" #> [1] \"  --rg-id             string                            add the RG-ID field of the SAM output header\" #> [1] \"  --rg                string,val                        add an RG-TAG field of the SAM output header\" #> [1] \"  --cache-writes      bool                   [false]    speed up writes on disk\" #> [1] \"Paired-End:\" #> [1] \"  --ff                                       [false]    paired mates are forward-forward\" #> [1] \"  --fr                                       [true]     paired mates are forward-reverse\" #> [1] \"  --rf                                       [false]    paired mates are reverse-forwardd\" #> [1] \"  --rr                                       [false]    paired mates are reverse-reverse\" #> [1] \"  --minins     |  -I  int                    [0]        minimum insert length\" #> [1] \"  --maxins     |  -X  int                    [500]      maximum insert length\" #> [1] \"  --overlap                                  [true]     allow overlapping mates\" #> [1] \"  --no-mixed                                 [false]    only report paired alignments\" #> [1] \"  --ungapped-mates | -ug                                perform ungapped mate alignment\" #> [1] \"Seeding:\" #> [1] \"  --seed-len   | -L   int                    [22]       seed lengths\" #> [1] \"  --seed-freq  | -i   {G|L|S},x,y                       seed interval, as x + y*func(read-len) (G=log,L=linear,S=sqrt)\" #> [1] \"  --max-hits          int                    [100]      maximum amount of seed hits\" #> [1] \"  --max-reseed | -R   int                    [2]        number of reseeding rounds\" #> [1] \"  --top               bool                   [false]    explore top seed entirely\" #> [1] \"  --N                 bool                   [false]    allow substitution in seed\" #> [1] \"Extension:\" #> [1] \"  --mode              {best,best-exact,all}  [best]     alignment mode\\n\" #> [1] \"  --all        | -a                          [false]    perform all-mapping (i.e. find and report all alignments)\" #> [1] \"  --local                                    [false]    perform local alignment\" #> [1] \"  --rand                                     [true]     randomized seed hit selection\" #> [1] \"  --no-rand                                  [false]    do not randomize seed hit selection\" #> [1] \"  --max-dist          int                    [15]       maximum edit distance\" #> [1] \"  --max-effort-init   int                    [15]       initial maximum number of consecutive extension failures\" #> [1] \"  --max-effort | -D   int                    [15]       maximum number of consecutive extension failures\" #> [1] \"  --min-ext           int                    [30]       minimum number of extensions per read\" #> [1] \"  --max-ext           int                    [400]      maximum number of extensions per read\" #> [1] \"  --very-fast                                           apply the very-fast presets\" #> [1] \"  --fast                                                apply the fast presets\" #> [1] \"  --sensitive                                           apply the sensitive presets\" #> [1] \"  --very-sensitive                                      apply the very-sensitive presets\" #> [1] \"  --very-fast-local                                     apply the very-fast presets\" #> [1] \"  --fast-local                                          apply the fast presets\" #> [1] \"  --sensitive-local                                     apply the sensitive presets\" #> [1] \"  --very-sensitive-local                                apply the very-sensitive presets\" #> [1] \"Scoring:\" #> [1] \"  --scoring           {sw|ed|wfa}            [ed]       Smith-Waterman / Edit-Distance / Wfa scoring\" #> [1] \"  --score-min         {G|L|S},x,y                       minimum score function, as x + y*func(read-len)\" #> [1] \"  --ma                int                               match bonus\" #> [1] \"  --mp                int,int                           mismatch min/max penalties\" #> [1] \"  --np                int                               N penalty\" #> [1] \"  --rdg               int,int                           read open/extension gap penalties\" #> [1] \"  --rfg               int,int                           reference open/extension gap penalties\" #> [1] \"Alternative:\" #> [1] \"  --wfa                                                 Activate wavefront algorithm\" #> [1] \"Reporting:\" #> [1] \"  --mapQ-filter | -Q  int                    [0]        minimum mapQ threshold\" #> [1] \"\" #> [1] \"\" #> [1] \"Default values are indicated in brackets [].\" #> [1] \"\" #> [1] \"The '--scoring-scheme filename' option allows to provide a custom Smith-Waterman scoring\" #> [1] \"scheme through a text file, where each line must contain a token value pair.\" #> [1] \" The tokens and default values are reported below:\" #> [1] \"*  match               0        // local alignment: 2\" #> [1] \"*  mm-penalty-min      2\" #> [1] \"*  mm-penalty-max      6\" #> [1] \"*  N-penalty-min       1\" #> [1] \"*  N-penalty-max       1\" #> [1] \"*  score-min-const     -0.6     // local alignment: 0\" #> [1] \"*  score-min-coeff     -0.6     // local alignment: 10\" #> [1] \"*  score-min-type      linear   // local alignment: log\" #> [1] \"*  N-ceil-const        0\" #> [1] \"*  N-ceil-coeff        0.15\" #> [1] \"*  read-gap-const      5\" #> [1] \"*  read-gap-coeff      3\" #> [1] \"*  ref-gap-const       5\" #> [1] \"*  ref-gap-coeff       3\" #> [1] \"*  gap-free            5\""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Print version information — nvBowtie_version","title":"Print version information — nvBowtie_version","text":"Calling nvBowtie_version() displays version information RbowtieCuda package use.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print version information — nvBowtie_version","text":"","code":"nvBowtie_version()"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print version information — nvBowtie_version","text":"invisible Integer call status. value 0 mistakes.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_version.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print version information — nvBowtie_version","text":"Franck RICHARD","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvBowtie_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print version information — nvBowtie_version","text":"","code":"nvBowtie_version() #> [1] 0"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvbio_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Print unit tests — nvbio_tests","title":"Print unit tests — nvbio_tests","text":"Calling nvbio_tests() performs alignment tests","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvbio_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print unit tests — nvbio_tests","text":"","code":"nvbio_tests()"},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvbio_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print unit tests — nvbio_tests","text":"value 0 mistakes.","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvbio_tests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print unit tests — nvbio_tests","text":"Franck RICHARD","code":""},{"path":"https://github.com/FranckRICHARD01/RbowtieCuda/reference/nvbio_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print unit tests — nvbio_tests","text":"","code":"nvbio_tests() #> [1] 0"}]
